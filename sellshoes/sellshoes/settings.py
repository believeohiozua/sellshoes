"""
Django settings for sellshoes project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

# import dj_database_url
from pathlib import Path
from decouple import config
from django.core.management.utils import get_random_secret_key

import cloudinary

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY", default=get_random_secret_key(), cast=str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=True, cast=bool)

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    "rest_framework",
    "drf_yasg",
    "cloudinary",
    "cloudinary_storage",
    
]

INSTALLED_APPS += [
    # Third-party apps
    "corsheaders",
    "accounts",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware", #corsheaders
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "sellshoes.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "sellshoes.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#TODO: custom database configuration
# DATABASES = {"default": dj_database_url.config(conn_max_age=60)}
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

###########################################################
#           ADDITIONAL CONFIGURATION                      #
###########################################################

# AUTH CREDENTIALS
SITE_ID = 1
# TODO: AUTH_USER_MODEL = "accounts.Users"
CORS_ORIGIN_ALLOW_ALL = True
CSRF_COOKIE_NAME = "csrftoken"
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False

AUTH_USER_MODEL = "accounts.CustomUser"


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

# SWAGGER CONFIGURATION
SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'drf_yasg.inspectors.AutoSchema',
    'DEFAULT_GENERATOR_CLASS': 'drf_yasg.generators.OpenAPISchemaGenerator',
    'DEFAULT_TITLE': 'Sellshoes API',
    'DEFAULT_DESCRIPTION': 'API documentation for Sellshoes project',
    'DEFAULT_VERSION': '1.0.0',
    'DEFAULT_CONTACT_EMAIL': 'contact@example.com',
    'DEFAULT_LICENSE_NAME': 'MIT License',
    'DEFAULT_LICENSE_URL': 'https://opensource.org/licenses/MIT',
    'DEFAULT_TERMS_OF_SERVICE_URL': 'https://example.com/terms/',
    'DEFAULT_SCHEMA_URL': 'http://json-schema.org/draft-07/schema#',
}

# EMAIL CONFIGURATION
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default="ups.chime@gmail.com", cast=str)
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default="dqakzhfxcsufacod", cast=str)
SERVER_EMAIL = EMAIL_HOST_USER

# CLOUDINARY
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dmt7sdytu',
    'API_KEY': '523771476165756',
    'API_SECRET': 'RI75F8gWbwdbag9SIj22FsCaaio',
}

DEFAULT_AUTO_FIELD = 'cloudinary_storage.storage.MediaCloudStorage'
MEDIA_URL = '/media/'


CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dmt7sdytu',
    'API_KEY': '523771476165756', 
    'API_SECRET': 'RI75F8gWbwdbag9SIj22FsCaaio',
    'SECURE': True,
    'CACHE_PREVIOUS_VERSION': True,
}